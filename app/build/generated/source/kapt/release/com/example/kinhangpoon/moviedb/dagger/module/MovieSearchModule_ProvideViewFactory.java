// Generated by Dagger (https://google.github.io/dagger).
package com.example.kinhangpoon.moviedb.dagger.module;

import com.example.kinhangpoon.moviedb.view.MovieSearchView;
import dagger.internal.Factory;
import dagger.internal.Preconditions;

public final class MovieSearchModule_ProvideViewFactory implements Factory<MovieSearchView> {
  private final MovieSearchModule module;

  public MovieSearchModule_ProvideViewFactory(MovieSearchModule module) {
    this.module = module;
  }

  @Override
  public MovieSearchView get() {
    return Preconditions.checkNotNull(
        module.provideView(), "Cannot return null from a non-@Nullable @Provides method");
  }

  public static MovieSearchModule_ProvideViewFactory create(MovieSearchModule module) {
    return new MovieSearchModule_ProvideViewFactory(module);
  }

  public static MovieSearchView proxyProvideView(MovieSearchModule instance) {
    return Preconditions.checkNotNull(
        instance.provideView(), "Cannot return null from a non-@Nullable @Provides method");
  }
}
