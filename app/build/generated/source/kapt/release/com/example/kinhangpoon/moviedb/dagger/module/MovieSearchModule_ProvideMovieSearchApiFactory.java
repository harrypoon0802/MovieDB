// Generated by Dagger (https://google.github.io/dagger).
package com.example.kinhangpoon.moviedb.dagger.module;

import com.example.kinhangpoon.moviedb.model.service.MovieSearchApi;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;
import retrofit2.Retrofit;

public final class MovieSearchModule_ProvideMovieSearchApiFactory
    implements Factory<MovieSearchApi> {
  private final MovieSearchModule module;

  private final Provider<Retrofit> retrofitProvider;

  public MovieSearchModule_ProvideMovieSearchApiFactory(
      MovieSearchModule module, Provider<Retrofit> retrofitProvider) {
    this.module = module;
    this.retrofitProvider = retrofitProvider;
  }

  @Override
  public MovieSearchApi get() {
    return Preconditions.checkNotNull(
        module.provideMovieSearchApi(retrofitProvider.get()),
        "Cannot return null from a non-@Nullable @Provides method");
  }

  public static MovieSearchModule_ProvideMovieSearchApiFactory create(
      MovieSearchModule module, Provider<Retrofit> retrofitProvider) {
    return new MovieSearchModule_ProvideMovieSearchApiFactory(module, retrofitProvider);
  }

  public static MovieSearchApi proxyProvideMovieSearchApi(
      MovieSearchModule instance, Retrofit retrofit) {
    return Preconditions.checkNotNull(
        instance.provideMovieSearchApi(retrofit),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
